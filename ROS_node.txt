ROS Node  생성

mkdir catkin_ws
cd catkin_ws 
mkdir src
cd src 
catkin_create pkg [패키지 이름] [의존성 패키지]
catkin_create pkg basic_tutorial roscpp

cd src 
nano basic.cpp  cpp 파일 생성

#include <ros/ros.h>


int main(int argc, char **argv)
{
   ROS_INFO("Hello World");
   ros::init(argc, argv. “basic_node”); -> rosnode list를 입력했을때 나타나는 그 노드 이름
   ros::NodeHandle n; -> topic 이나 service node 등으로 확장

  ros::Rate 노드가 몇 hz로 동작할것인지 정함

while(ros::ok()) -> 노드가 종료 되었을시 false를 반환
{
    ros::spinOnce();
    loop_rate.sleep(); ---> 무한 반복문에서 loop_rate.sleep()선언 되면 정의한 Hz가 될 때까지 기다렸다가 다음으로 넘어감
}
    
    return 0;
}

ctrl + O로 파일 저장
ctrl + x로 나가기

cmakelist.txt 파일에 내가 작성한 cpp 파일 정보를 입력

include_directories(~~~~) 아래에

add_executable(basic_node src/basic.cpp) 
target_link_libraries(basic_node ${catkin_LIBRARIES)}

catkin_make => 소스 파일 컴파일


ROS 환경 구조

워크 스페이스 -> catkin_ws


rospack fine 패키지 이름 ros패키지 찾기
내가 수행한 결과물은 devel 폴더 내에 존재 실행파일은 lib 폴더안에 패키지 이름의 폴더 아래에 존재 ./명령어를 통해서 실행가능
rosrun 명령어는 실행파일을 쉽게 찾는다

ros 설치된 경로 opt/ros/noetic 이 안에 turtlesim 패키지가 존재

노드를 실행하기 전 입력하는 명령어가 있다 source devel/setup.bash -> ros 패키지 경로를 설정하는 명령어
~/bashrc에 등록하면 터미널 실행시 자동으로 입력되어 매번 입력해야 하는 번거로움을 줄일 수 있다
source ~/catkin_ws/devel/setup.bash

ROS 패키지 경로는 어떻게 만들어지는가?
ROS 패키지경로를 설정하는 환경설정 명령어 export |grep ROS

ROS Topic 이란:: ROS에서 Node와 Node 사이에 연속적으로 데이터를 주고 받을 수 있는 방법 중 하나

NodeHandle n의 advertise를 통해 정의할 수 있따 
<>안에는 어떤 메시지 타입을 사용할 것인지를 정의하고 ""안에는 rostopic list를 입력할때 나오는 topic이름을 정의할수있다. 1000은 메시지 대기열에 크기

ROS에서 메시지 대기열은 메시지를 발신하는 publisher와 이를 수신하는 subscriber 간의 통신에서 중간에 메시지가 유실되지 않도록 하기 위해 사용되는 기능이다. 대기열은 큐 자료구조로 구현 되어 있다.

큐(Queue) 자료구조?
큐 자료형은 선형 자료구조의 일종으로, 먼저 들어간 데이터가 먼저 나오는 FIFO(first in first out)구조를 가지고 있다. 큐에 데이터를 삽입하는 작업을 enqueue(인큐)라 하고, 큐에서 데이터를 추출하는 작업을 Dequeue(디큐)라 한다 
큐는 대기열이나 버퍼 등에 사용되며, 주로 시스템 프로그래밍에서 많이 사용한다.

